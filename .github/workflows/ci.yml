name: Alyio.Dapper.Extensions

on:
  push:
    branches:
      - main
      - dev
      - release/*
    tags:
      - '*.*.*'
  pull_request:
    branches:
      - main
      - dev

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - dotnet-version: '6.0.x'
            framework: 'net6.0'
          - dotnet-version: '8.0.x'
            framework: 'net8.0'
          - dotnet-version: '9.0.x'
            framework: 'net9.0'
          - dotnet-version: '10.0.x'
            framework: 'net10.0'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Display .NET Information
        run: dotnet --info

      - name: Restore Dependencies
        run: dotnet restore /p:TargetFrameworks="${{ matrix.framework }}"

      - name: Build Project
        run: dotnet build --no-restore -c Release --framework ${{ matrix.framework }}

      - name: Run Tests
        run: dotnet test --no-build --no-restore -c Release --framework ${{ matrix.framework }} /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

  pack_and_publish:
    needs: build_and_test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '10.0.x'

      - name: Display .NET Information
        run: dotnet --info

      - name: Restore Dependencies
        run: dotnet restore

      - name: Pack NuGet Package
        run: |
          TAG_VERSION="${{ github.ref_name }}"
          dotnet pack -c Release --output nupkg /p:PackageVersion=$TAG_VERSION
      - name: List NuGet Packages (nupkg/*)
        run: ls -l nupkg/*

      - name: Push NuGet Package to NuGet.org
        # Push the generated .nupkg and .snupkg files to nuget.org
        run: dotnet nuget push "nupkg/*.nupkg" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate
